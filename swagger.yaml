openapi: 3.0.0
info:
  title: API Jobs
  contact: {}
  version: "1.0"
servers:
  - url: https://jobs-api-zyar3k.herokuapp.com/api/v1
    variables: {}
paths:
  /auth/register:
    post:
      tags:
        - Auth
      summary: Register
      operationId: Register
      parameters: []
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RegisterRequest"
            example:
              name: name
              email: name@gmail.com
              password: secret
        required: true
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
      security: []
  /auth/login:
    post:
      tags:
        - Auth
      summary: Login User
      operationId: LoginUser
      parameters: []
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginUserRequest"
            example:
              email: name@gmail.com
              password: secret
        required: true
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
      security: []
  /jobs:
    post:
      tags:
        - Jobs
      summary: Create job
      operationId: Createjob
      parameters: []
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreatejobRequest"
            example:
              company: Company
              position: CEO
        required: true
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
    get:
      tags:
        - Jobs
      summary: Get all jobs by user
      operationId: Getalljobsbyuser
      parameters: []
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
  /jobs/{id}:
    parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
        description: The job ID
    get:
      tags:
        - Jobs
      summary: Get single job
      operationId: Getsinglejob
      parameters: []
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false

    patch:
      tags:
        - Jobs
      summary: Update job
      operationId: Updatejob
      parameters: []
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdatejobRequest"
            example:
              company: Big Company
              position: Boss
        required: true
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
    delete:
      tags:
        - Jobs
      summary: Delete job
      operationId: Deletejob
      parameters: []
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
components:
  schemas:
    RegisterRequest:
      title: RegisterRequest
      required:
        - name
        - email
        - password
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        password:
          type: string
      example:
        name: name
        email: name@gmail.com
        password: secret
    LoginUserRequest:
      title: LoginUserRequest
      required:
        - email
        - password
      type: object
      properties:
        email:
          type: string
        password:
          type: string
      example:
        email: name@gmail.com
        password: secret
    CreatejobRequest:
      title: CreatejobRequest
      required:
        - company
        - position
      type: object
      properties:
        company:
          type: string
        position:
          type: string
      example:
        company: Company
        position: intern
    UpdatejobRequest:
      title: UpdatejobRequest
      required:
        - company
        - position
      type: object
      properties:
        company:
          type: string
        position:
          type: string
      example:
        company: Company 2
        position: model
  securitySchemes:
    httpBearer:
      type: http
      scheme: bearer
security:
  - httpBearer: []
tags:
  - name: Auth
    description: ""
  - name: Jobs
    description: ""
